# this is a file to verify my homography computations are done correctly
import numpy as np

p = np.array([
    [0, 0],
    [0, 3],
    [3, 0],
    [3, 3],
]).astype(np.float32)
# p = np.array([
#     [426, 237],
#     [361, 168],
#     [329, 280],
#     [252, 225],
# ]).astype(np.float32)
p -= p.mean(axis=0).reshape(1, -1)
print(p)

q = np.array([
    [-1,-1, 1],
    [-1, 1, 1],
    [ 1,-1, 1],
    [ 1, 1, 1],
]).astype(np.float32)

A = np.array([
    [q[0,0], q[0,1], 1, 0,      0,      0, -p[0,0]*q[0,0], -p[0,0]*q[0,1]],
    [0,      0,      0, q[0,0], q[0,1], 1, -p[0,1]*q[0,0], -p[0,1]*q[0,1]],

    [q[1,0], q[1,1], 1, 0,      0,      0, -p[1,0]*q[1,0], -p[1,0]*q[1,1]],
    [0,      0,      0, q[1,0], q[1,1], 1, -p[1,1]*q[1,0], -p[1,1]*q[1,1]],

    [q[2,0], q[2,1], 1, 0,      0,      0, -p[2,0]*q[2,0], -p[2,0]*q[2,1]],
    [0,      0,      0, q[2,0], q[2,1], 1, -p[2,1]*q[2,0], -p[2,1]*q[2,1]],

    [q[3,0], q[3,1], 1, 0,      0,      0, -p[3,0]*q[3,0], -p[3,0]*q[3,1]],
    [0,      0,      0, q[3,0], q[3,1], 1, -p[3,1]*q[3,0], -p[3,1]*q[3,1]],
])

h = np.linalg.solve(A, p.reshape(-1))
H = np.array(h.tolist() + [1.0]).reshape(3, 3)
print(H @ q[0])

# A = np.array([
#     [q[0,0], q[0,1], 1, 0,      0,      0, -p[0,0]*q[0,0], -p[0,0]*q[0,1], -p[0,0]],
#     [0,      0,      0, q[0,0], q[0,1], 1, -p[0,1]*q[0,0], -p[0,1]*q[0,1], -p[0,1]],

#     [q[1,0], q[1,1], 1, 0,      0,      0, -p[1,0]*q[1,0], -p[1,0]*q[1,1], -p[1,0]],
#     [0,      0,      0, q[1,0], q[1,1], 1, -p[1,1]*q[1,0], -p[1,1]*q[1,1], -p[1,1]],

#     [q[2,0], q[2,1], 1, 0,      0,      0, -p[2,0]*q[2,0], -p[2,0]*q[2,1], -p[2,0]],
#     [0,      0,      0, q[2,0], q[2,1], 1, -p[2,1]*q[2,0], -p[2,1]*q[2,1], -p[2,1]],

#     [q[3,0], q[3,1], 1, 0,      0,      0, -p[3,0]*q[3,0], -p[3,0]*q[3,1], -p[3,0]],
#     [0,      0,      0, q[3,0], q[3,1], 1, -p[3,1]*q[3,0], -p[3,1]*q[3,1], -p[3,1]],
# ])

# u, s, vh = np.linalg.svd(A)
# h = vh[:, 0]
# H = h.reshape(3, 3)

# print(H @ q[0])